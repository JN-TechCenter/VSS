version: '3.8'

# VSS 开发环境 Docker Compose 配置
# 支持前端热更新 + nginx 代理

services:
  # Nginx 反向代理 - 开发环境
  nginx:
    image: nginx:alpine
    container_name: vss-nginx-dev
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${DEV_TOOLS_PORT:-8080}:8080"
    volumes:
      - ./nginx/nginx-dev.conf:/etc/nginx/nginx.conf:ro
      - nginx-logs:/var/log/nginx
    networks:
      - ${DOCKER_NETWORK:-vss-network}
    restart: unless-stopped
    depends_on:
      - backend
      - frontend-dev
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 后端服务 - 开发模式
  backend:
    build:
      context: ./VSS-backend
      dockerfile: Dockerfile
    container_name: vss-backend-dev
    expose:
      - "${BACKEND_PORT:-3000}"
    environment:
      - NODE_ENV=development
      - SPRING_PROFILES_ACTIVE=dev
      - SERVER_PORT=${BACKEND_PORT:-3000}
      - CORS_ORIGIN=http://localhost:${FRONTEND_DEV_PORT:-3000}
      - LOG_LEVEL=debug
      - LOG_CONSOLE_ENABLED=true
    volumes:
      - backend-data:/app/data
      - backend-logs:/app/logs
      # 开发时代码热重载 (如果支持)
      - ./VSS-backend/src:/app/src:ro
    networks:
      - ${DOCKER_NETWORK:-vss-network}
    restart: unless-stopped

  # 前端开发服务器 - 支持热更新
  frontend-dev:
    build:
      context: ./VSS-frontend
      dockerfile: Dockerfile.dev  # 开发专用 Dockerfile
      args:
        - VITE_API_BASE_URL=/api
        - VITE_HMR_HOST=localhost
        - VITE_HMR_PORT=${FRONTEND_DEV_PORT:-3000}
    container_name: vss-frontend-dev
    ports:
      - "${FRONTEND_DEV_PORT:-3000}:${FRONTEND_DEV_PORT:-3000}"
      - "24678:24678"  # Vite HMR WebSocket 端口
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=/api
      - VITE_HMR_HOST=0.0.0.0
      - VITE_HMR_PORT=24678
    volumes:
      # 挂载源代码以支持热更新
      - ./VSS-frontend/src:/app/src
      - ./VSS-frontend/public:/app/public
      - ./VSS-frontend/index.html:/app/index.html
      - ./VSS-frontend/vite.config.ts:/app/vite.config.ts
      - ./VSS-frontend/package.json:/app/package.json
      # 排除 node_modules 避免冲突
      - /app/node_modules
    networks:
      - ${DOCKER_NETWORK:-vss-network}
    restart: unless-stopped
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "${FRONTEND_DEV_PORT:-3000}"]

# 数据卷
volumes:
  backend-data:
    name: ${APP_NAME:-vss}-backend-data-dev
  backend-logs:
    name: ${APP_NAME:-vss}-backend-logs-dev
  nginx-logs:
    name: ${APP_NAME:-vss}-nginx-logs-dev

# 网络
networks:
  vss-network:
    name: ${DOCKER_NETWORK:-vss-network}
    driver: bridge
